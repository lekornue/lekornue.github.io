{"version":3,"sources":["redux/types.ts","redux/rootReducer.ts","redux/sagas.ts","pages/HomePage.tsx","pages/AboutPage.tsx","сomponents/MoviesCardsPageComps/Alert.tsx","сomponents/MoviesCardsPageComps/MovieCard.tsx","redux/actions.ts","сomponents/MoviesCardsPageComps/MovieListCards.tsx","pages/MoviesCardsPage.tsx","сomponents/MoviePageComps/ContentCharacteristics.tsx","сomponents/MoviePageComps/ContentDescpription.tsx","сomponents/MoviePageComps/MoviePageContent.tsx","сomponents/MoviePageComps/MoviePageHeader.tsx","pages/MoviePage.tsx","сomponents/NavBar.tsx","services/inputBlur.ts","services/inputFocus.ts","сomponents/ModalBody.tsx","сomponents/Modal.tsx","App.tsx","index.tsx"],"names":["FETCH_MOVIES","FETCH_SINGLEMOVIE","REQUEST_SINGLEMOVIE","SHOW_MODAL","initialState","movies","singleMovie","showModal","sagaWatcher","sagaWorker","takeEvery","action","call","fetchSingleMovie","imdbID","payload","put","type","a","fetch","response","json","Home","About","className","style","width","margin","Alert","message","role","to","MovieCard","movieCard","dispatch","useDispatch","height","src","Poster","alt","marginBottom","Title","onClick","MovieListCards","movieList","useState","sortOrder","state","setState","onChange","event","target","value","sort","prev","next","Year","map","uuidv4","MoviesCardsPage","ContentCharacteristics","movie","paddingLeft","Genre","Actors","Director","Writer","Country","ContentDecription","Plot","MoviePageContent","currentTab","maxWidth","MoviePageHeader","itemId","id","exact","title","MoviePage","NavBar","setTitle","useEffect","then","Search","fetchMovies","paddingRight","marginLeft","placeholder","inputBlur","error","document","getElementById","length","classList","remove","setAttribute","add","removeAttribute","console","log","includes","inputFocus","contains","ModalBody","onBlur","onFocus","hidden","Modal","clickHandler","createPortal","tabIndex","body","App","useSelector","path","component","render","match","params","saga","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","thunk","run","ReactDOM"],"mappings":"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","file":"static/js/main.6528cd95.chunk.js","sourcesContent":["export const FETCH_MOVIES = 'FETCH_MOVIES'\r\nexport const FETCH_SINGLEMOVIE = 'FETCH_SINGLEMOVIE'\r\nexport const REQUEST_SINGLEMOVIE = 'REQUEST_SINGLEMOVIE'\r\nexport const SHOW_MODAL = 'SHOW_MODAL'","import { FETCH_MOVIES, FETCH_SINGLEMOVIE, SHOW_MODAL } from \"./types\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  singleMovie: {},\r\n  showModal : false,\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action: { type: string; payload: any; }) => {\r\n  switch (action.type) {\r\n    case FETCH_MOVIES:\r\n      return { ...state, movies: action.payload }\r\n    case FETCH_SINGLEMOVIE:\r\n      return { ...state, singleMovie: action.payload }\r\n      case SHOW_MODAL:\r\n        return { ...state, showModal: !state.showModal }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { SingleMovie } from \"../interfaces\";\r\nimport { FETCH_SINGLEMOVIE, REQUEST_SINGLEMOVIE } from \"./types\";\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_SINGLEMOVIE, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker(action: { type: string; imdbID: string }) {\r\n  const payload: SingleMovie = yield call(fetchSingleMovie, action.imdbID);\r\n  yield put({ type: FETCH_SINGLEMOVIE, payload });\r\n}\r\n\r\nasync function fetchSingleMovie(imdbID: string) {\r\n  const response = await fetch(\r\n    `http://www.omdbapi.com/?i=${imdbID}&plot=full&apikey=de7d9c13`\r\n  );\r\n  return await response.json();\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const Home: React.FC = () => <h1>Начните поиск фильмов</h1>\r\n","import React from 'react';\r\n\r\n\r\nexport const About: React.FC = () =>\r\n  <div className=\"card\" style={{ width: '35rem', margin: 'auto' }}>\r\n    <div className=\"card-body\" style={{ margin: 'auto' }}>\r\n      <h2 className=\"card-title\">Приложение для поиска фильмов</h2>\r\n      <p className=\"card-text\">Полное описание фильмов разных жанров</p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface AlertProps {\r\n  message: string;\r\n}\r\n\r\nconst Alert: React.FC<AlertProps> = ({ message }) => {\r\n  return (\r\n    <div\r\n      className=\"alert alert-warning alert-dismissible fade show\"\r\n      role=\"alert\"\r\n    >\r\n      {message}\r\n      <NavLink\r\n        className=\"btn-close\"\r\n        to=\"/\"\r\n        role=\"button\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      >\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Search } from \"../../interfaces\";\r\nimport { fetchSingleMovie } from \"../../redux/actions\";\r\n\r\ninterface MovieCardProps {\r\n  movieCard: Search;\r\n}\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = ({ movieCard }) => {\r\n\r\n const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"card\" style={{ height: \"26rem\" }}>\r\n        <img\r\n          src={movieCard.Poster}\r\n          className=\"card-img-top\"\r\n          alt=\"\"\r\n          style={{ height: \"18rem\" }}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\" style={{ height: \"1rem\", marginBottom: 40 }}>\r\n            {movieCard.Title}\r\n          </h5>\r\n          <Link\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              dispatch(fetchSingleMovie(movieCard.imdbID))\r\n            }}\r\n            to={`movies/${movieCard.imdbID}`}\r\n          >\r\n            Описание фильма\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieCard;\r\n\r\n","import { FETCH_MOVIES, REQUEST_SINGLEMOVIE } from \"./types\";\r\n\r\nexport function fetchMovies(title: string) {\r\n  return function (dispatch: (arg0: { type: string; payload: any }) => any) {\r\n    fetch(`http://www.omdbapi.com/?s=${title}&page=1&apikey=de7d9c13`)\r\n      .then((response) => response.json())\r\n      .then((json) => dispatch({ type: FETCH_MOVIES, payload: json.Search }));\r\n  };\r\n}\r\n\r\nexport function fetchSingleMovie(imdbID: string) {\r\n  return {\r\n    type: REQUEST_SINGLEMOVIE,\r\n    imdbID: imdbID,\r\n  };\r\n}","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Search } from \"../../interfaces\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\ninterface MovieListCardsProps {\r\n  movieList: Array<Search>;\r\n}\r\n\r\nconst MovieListCards: React.FC<MovieListCardsProps> = ({ movieList }) => {\r\n\r\n  const [state, setState] = useState({\r\n    sortOrder: 'increase',\r\n  });\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setState({\r\n      sortOrder: event.target.value\r\n    });\r\n  };\r\n\r\n  const sortMovies = () => {\r\n    if (state.sortOrder === 'decrease') {\r\n      // сортировка по убыванию\r\n      movieList.sort((prev: any, next: any) => next.Year - prev.Year)\r\n    } else {\r\n      // сортировка по возрастанию\r\n      movieList.sort((prev: any, next: any) => prev.Year - next.Year)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\" onChange={changeHandler}>\r\n        <option value=\"increase\">Сначала ранние</option>\r\n        <option value=\"decrease\">Сначала поздние</option>\r\n      </select>\r\n\r\n      {sortMovies()}\r\n\r\n      <div className=\"container px-4\">\r\n        <div className=\"row row-cols-2 row-cols-lg-5 g-2 g-lg-3\">\r\n          {movieList.map((movieCard) => {\r\n            return (\r\n              <MovieCard key={uuidv4()} movieCard={movieCard} />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MovieListCards;","import React from \"react\";\r\nimport { Search } from \"../interfaces\";\r\nimport Alert from \"../сomponents/MoviesCardsPageComps/Alert\";\r\nimport MovieListCards from \"../сomponents/MoviesCardsPageComps/MovieListCards\";\r\n\r\ninterface MoviesCardsPageProps {\r\n  movieList: Array<Search>;\r\n}\r\n\r\nexport const MoviesCardsPage: React.FC<MoviesCardsPageProps> = ({ movieList }) => {\r\n\r\n  return movieList \r\n  ? \r\n  <MovieListCards movieList={movieList} /> \r\n  : \r\n  <Alert message=\"Введите осмысленное название фильма в поле Search\" />\r\n\r\n};\r\n","import React from \"react\";\r\nimport { SingleMovie } from \"../../interfaces\";\r\n\r\ninterface ContentProps {\r\n    movie: SingleMovie;\r\n}\r\n\r\nconst ContentCharacteristics: React.FC<ContentProps> = ({ movie }) => {\r\n\r\n    return (\r\n        <div className=\"col-md-8\" style={{ paddingLeft: 200 }}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{`Название фильма: ${movie.Title}`}</h5>\r\n                <p className=\"card-text\">{`Год: ${movie.Year}`}</p>\r\n                <p className=\"card-text\">{`Жанр: ${movie.Genre}`}</p>\r\n                <p className=\"card-text\">{`Актеры : ${movie.Actors}`}</p>\r\n                <p className=\"card-text\">{`Режиссер: ${movie.Director}`}</p>\r\n                <p className=\"card-text\">{`Сценарист: ${movie.Writer}`}</p>\r\n                <p className=\"card-text\">{`Страна: ${movie.Country}`}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default ContentCharacteristics;","import React from \"react\";\r\nimport { SingleMovie } from \"../../interfaces\";\r\n\r\ninterface ContentProps {\r\n    movie: SingleMovie;\r\n}\r\n\r\nconst ContentDecription: React.FC<ContentProps> = ({ movie }) => {\r\n\r\n    return (\r\n        <div className=\"col-md-8\" style={{ paddingLeft: 200 }}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{`Название фильма: ${movie.Title}`}</h5>\r\n                <p className=\"card-text\">{`Описание: ${movie.Plot}`}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default ContentDecription;","import React from \"react\";\r\nimport { SingleMovie } from \"../../interfaces\";\r\nimport ContentCharacteristics from \"./ContentCharacteristics\";\r\nimport ContentDecription from \"./ContentDescpription\";\r\n\r\ninterface MoviePageContentProps {\r\n    movie: SingleMovie;\r\n    currentTab: string;\r\n}\r\n\r\nconst MoviePageContent: React.FC<MoviePageContentProps> = ({ movie, currentTab }) => {\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ maxWidth: 800 }}>\r\n            <div className=\"row g-2\">\r\n                <div className=\"col-md-4\">\r\n                    <img\r\n                        src={movie.Poster}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                {currentTab === \"description\" \r\n                ? \r\n                <ContentDecription movie = {movie}/>\r\n                : \r\n                <ContentCharacteristics  movie = {movie}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MoviePageContent;","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\ninterface MoviePageHeaderProps {\r\n    itemId: string;\r\n}\r\n\r\nconst MoviePageHeader: React.FC<MoviePageHeaderProps> = ({ itemId }) => {\r\n\r\n    return (\r\n        <div className=\"card-header\">\r\n            <ul\r\n                className=\"nav nav-pills mb-3 me-auto\"\r\n                id=\"pills-tab\"\r\n                role=\"tablist\"\r\n            >\r\n                <li className=\"nav-item \" role=\"presentation\">\r\n                    <NavLink\r\n                        className=\"nav-link\"\r\n                        id=\"pills-home-tab\"\r\n                        data-bs-toggle=\"pill\"\r\n                        data-bs-target=\"#pills-home\"\r\n                        type=\"button\"\r\n                        role=\"tab\"\r\n                        aria-controls=\"pills-home\"\r\n                        aria-selected=\"true\"\r\n                        to={`/movies/${itemId}`}\r\n                        exact\r\n                        title=\"Данные\"\r\n                    >\r\n                        Данные фильма\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <NavLink\r\n                        className=\"nav-link\"\r\n                        id=\"pills-home-tab\"\r\n                        data-bs-toggle=\"pill\"\r\n                        data-bs-target=\"#pills-home\"\r\n                        type=\"button\"\r\n                        role=\"tab\"\r\n                        aria-controls=\"pills-home\"\r\n                        aria-selected=\"true\"\r\n                        to={`/movies/${itemId}/description`}\r\n                        title=\"Описание\"\r\n                    >\r\n                        Описание фильма\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        id=\"pills-home-tab\"\r\n                        data-bs-toggle=\"pill\"\r\n                        data-bs-target=\"#pills-home\"\r\n                        type=\"button\"\r\n                        role=\"tab\"\r\n                        aria-controls=\"pills-home\"\r\n                        aria-selected=\"true\"\r\n                        to=\"/movies\"\r\n                        title=\"Назад к фильмам\"\r\n                    >\r\n                        Назад к фильмам\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default MoviePageHeader;","import React from \"react\";\r\nimport { SingleMovie } from \"../interfaces\";\r\nimport MoviePageContent from \"../сomponents/MoviePageComps/MoviePageContent\";\r\nimport MoviePageHeader from \"../сomponents/MoviePageComps/MoviePageHeader\";\r\n\r\ninterface MoviePageProps {\r\n  movie: SingleMovie;\r\n  itemId: string;\r\n  currentTab: string;\r\n}\r\n\r\nexport const MoviePage: React.FC<MoviePageProps> = ({\r\n  movie,\r\n  itemId,\r\n  currentTab,\r\n}) => {\r\n  return (\r\n    <div className=\"card text-left\">\r\n      <MoviePageHeader itemId={itemId} />\r\n      <MoviePageContent movie={movie} currentTab={currentTab} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { fetchMovies } from \"../redux/actions\";\r\nimport { SHOW_MODAL } from \"../redux/types\";\r\n\r\nconst NavBar: React.FC = () => {\r\n\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovies(title))\r\n    // eslint-disable-next-line\r\n  }, [title]);\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    dispatch({ type: SHOW_MODAL })\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n      style={{ height: \"100px\", paddingLeft: \"1.5em\", paddingRight: \"1.5em\" }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\" title=\"На главную\">\r\n          <h4>Movie Search</h4>\r\n        </NavLink>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 nav-pills\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/\" exact title=\"На главную\">\r\n                Главная\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/about\" title=\"О команде\">\r\n                О приложении\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\" style={{ marginLeft: '10rem' }}>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={clickHandler} >\r\n                Регистрация\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <div className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={changeHandler}\r\n            />\r\n            <NavLink className=\"btn btn-primary\" to=\"/movies\" role=\"button\" title=\"Movies\"\r\n            >\r\n              Search\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export function inputBlur(event: React.FocusEvent<HTMLFormElement>) {\r\n  const error = document.getElementById(\"error\");\r\n\r\n  if (event.target.value.length > 0) {\r\n    event.target.classList.remove(\"invalid\");\r\n    error?.setAttribute(\"hidden\", \"false\");\r\n  } else {\r\n    event.target.classList.add(\"invalid\");\r\n    error?.removeAttribute(\"hidden\");\r\n  }\r\n\r\n  if (event.target.id === \"e-mail\") {\r\n    console.log(\"hello\");\r\n    if (!event.target.value.includes(\"@\")) {\r\n      event.target.classList.add(\"invalid\");\r\n      error?.removeAttribute(\"hidden\");\r\n    }\r\n  }\r\n\r\n  if (event.target.id === \"password\") {\r\n    if (event.target.value.length < 6) {\r\n      event.target.classList.add(\"invalid\");\r\n      error?.removeAttribute(\"hidden\");\r\n    }\r\n  }\r\n}\r\n","export function inputFocus(event: React.FocusEvent<HTMLFormElement>) {\r\n  const error = document.getElementById(\"error\");\r\n  if (event.target.classList.contains(\"invalid\")) {\r\n    event.target.classList.remove(\"invalid\");\r\n    error?.setAttribute(\"hidden\", 'false')\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { inputBlur } from \"../services/inputBlur\";\r\nimport { inputFocus } from \"../services/inputFocus\";\r\n\r\nconst ModalBody: React.FC = () => {\r\n\r\n    return (\r\n        <form className=\"form\" onBlur={inputBlur} onFocus={inputFocus}>\r\n            <div>\r\n                <p>name</p>\r\n                <input type=\"text\" id=\"name\" />\r\n            </div>\r\n            <div>\r\n                <p>date of birth</p>\r\n                <input type=\"text\" id=\"date of birth\" />\r\n            </div>\r\n            <div >\r\n                <p>e-mail</p>\r\n                <input type=\"text\" id=\"e-mail\" />\r\n            </div>\r\n            <div>\r\n                <p>password</p>\r\n                <input type=\"text\" id=\"password\" />\r\n            </div>\r\n            <div id=\"error\" className=\"error\" hidden>Пожалуйста, заполните поля правильно</div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ModalBody;","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SHOW_MODAL } from \"../redux/types\";\r\nimport ModalBody from \"./ModalBody\";\r\n\r\nconst Modal: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch({ type: SHOW_MODAL });\r\n    };\r\n\r\n    return createPortal(\r\n        <div className=\"Modal\" tabIndex={-1} >\r\n            <div className=\"modal-dialog\" style={{ width: \"15rem\"}}>\r\n                <div className=\"modal-content\" >\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Регистрация</h5>\r\n                        <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={clickHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <ModalBody />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={clickHandler}>\r\n                            Закрыть\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={clickHandler}>\r\n                            Отправить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Home } from \"./pages/HomePage\";\r\nimport { About } from \"./pages/AboutPage\";\r\nimport { MoviesCardsPage } from \"./pages/MoviesCardsPage\";\r\nimport { MoviePage } from \"./pages/MoviePage\";\r\nimport NavBar from \"./сomponents/NavBar\";\r\nimport { Search, SingleMovie } from \"./interfaces\";\r\nimport Modal from \"./сomponents/Modal\";\r\n\r\ninterface RootState {\r\n  movies: Search[];\r\n  singleMovie: SingleMovie;\r\n  showModal: boolean;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const movies = useSelector((state: RootState) => state.movies);\r\n  const singleMovie = useSelector((state: RootState) => state.singleMovie);\r\n  const showModal = useSelector((state: RootState) => state.showModal);\r\n\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n      <NavBar />\r\n      <div className=\"container pt-4\">\r\n        <Switch>\r\n          <Route path={\"/\"} exact component={Home} />\r\n          <Route path={\"/about\"} component={About} />\r\n\r\n          {/* Content */}\r\n\r\n          <Route\r\n            path=\"/movies/:id/description\"\r\n            render={({ match }) => {\r\n              const { id } = match.params;\r\n              return <MoviePage movie={singleMovie} itemId={id} currentTab=\"description\" />\r\n            }} />\r\n\r\n          <Route\r\n            path=\"/movies/:id\"\r\n            render={({ match }) => {\r\n              const { id } = match.params;\r\n              return <MoviePage movie={singleMovie} itemId={id} currentTab=\"characteristics\" />\r\n            }} />\r\n\r\n\r\n          <Route\r\n            path=\"/movies\"\r\n            render={() => <MoviesCardsPage movieList={movies} />}\r\n          />\r\n\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n    {showModal && (<Modal />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { sagaWatcher } from \"./redux/sagas\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk, saga),\n))\n\nsaga.run(sagaWatcher)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}